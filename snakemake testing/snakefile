# rule all:
#     input:
#         "variant.vcf"

# rule refIndex:
#     input:
#         "data/genome.fa"
#     output:
#         "data/genome.fa.fai"
#     shell:
#         """
#             bwa index {input}
#         """

rule map:
    input:
        "data/genome.fa",
        "data/A.fastq"
    output:
        "mapped_reads/mapped.bam"
    shell:
        """
        bwa mem {input} | samtools view -Sb - > {output}
        """
rule sort:
    input:
        "mapped_reads/mapped.bam"
    output:
        "sorted_reads/sorted.bam"
    shell:
        "samtools sort -T ./sorted_reads/target.sample "
        "-O bam {input} > {output}"

rule index:
    input:
        "sorted_reads/sorted.bam"
    output:
        "sorted_reads/sorted.bam.bai"
    shell:
        "samtools index {input}"

rule variant_calling:
    input:
        # ref=config["ref"],  # Reference genome
        ref="data/genome.fa",
        bam="sorted_reads/sorted.bam",
        bai="sorted_reads/sorted.bam.bai"
    output:
        vcf="variants.vcf"
    shell:
        """
        bcftools mpileup -Ou -f {input.ref} {input.bam} | \
        bcftools call -mv -Ov -o {output.vcf}
        """